# -*- coding: utf-8 -*-
"""EDA_in_pyhton.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_ngbApcQgSWMJZLtYQ79q_TsaZWe7n7l

# Cleaning the Dataset
"""

# Commented out IPython magic to ensure Python compatibility.
#### Importing the libraries required for data analysis
#### %matplotlib inline will lead to static images of your plot embedded in the notebook.

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

#### Importing the dataset required for data analysis

df=pd.read_csv('/content/Purchasing Habits of Consumers.csv', encoding= 'unicode_escape')
df.head()

#### Info tells about the column names, number of observations for each variable and data type of the variables.
#### Also tells about the missing cells or observations from the data

df.info()

#### drop is used to drop the variables from the dataset, inplace makes permanent changes.

df.drop(['Status', 'unnamed1'], axis=1, inplace=True)

df.info()

#### isnull is used to get the null values from the dataset

pd.isnull(df)

pd.isnull(df).sum()

#### shape tells about the number of observations and variables.

df.shape

df.dropna(inplace=True)

df.shape

#### astype is used to change the datatype

df["Amount"]=df["Amount"].astype("int")

#### dtypes tells about the datatype of the variable

df["Amount"].dtypes

#### columns gives us only the names of the variables in the order

df.columns

#### Describe function gives the mean, std, min, max, etc of the numerical data

df.describe()

df[["Age","Orders","Amount"]].describe()

"""# Exploratory Data Analysis

## Gender
"""

#### Countplot gives us the plot from which we get to know about the number of a particular variable, here it is gender.
#### Only the variable on the x-axis has to be mentioned, the variable on the y-axis is by default number of the observations of the variable on the x-axis.

sns.countplot(x="Gender", data=df)

#### On the bar-plot, exact number of observations is not mentioned, therefore the below line of code is used.


gender_plot = sns.countplot(x="Gender", data=df)

for bars in gender_plot.containers:
    gender_plot.bar_label(bars)

#### Groupby is used to filter on the basis of the variable, sum is used to add the obs. , sort_values is used to sort by a particular variable in ascending or descending order.

df.groupby(["Gender"], as_index=False)["Amount"].sum().sort_values(by="Amount",ascending=False)

#### The above line of code gives the table as output, the below line of code gives the barplot.


sales_gender=df.groupby(["Gender"], as_index=False)["Amount"].sum().sort_values(by="Amount",ascending=False)

sns.set(rc={"figure.figsize":(10,5)})
sales_plot=sns.barplot(x="Gender" , y="Amount", data=sales_gender)

"""#### From the above barplot we can conclude that "females" have purchased more, i.e. females have more purchasing power than men.

## Age
"""

age_grp_plot =sns.countplot(data=df, x="Age Group", hue="Gender")

for bars in age_grp_plot.containers:
    age_grp_plot.bar_label(bars)

sales_age_grp=df.groupby(["Age Group"], as_index=False)["Amount"].sum().sort_values(by="Amount", ascending= False)

sales_ag_plot=sns.barplot(x="Age Group" , y="Amount", data=sales_age_grp)

"""#### From the above barplot we can conclude that individuals from the age group "26-35 years" have purchased more, i.e. 26-35 year olds have more purchasing power than rest of the population.

## Marital Status
"""

marital_plot =sns.countplot(data=df, x="Marital_Status")

for bars in marital_plot.containers:
    marital_plot.bar_label(bars)

sales_marstatus=df.groupby(["Marital_Status","Gender"], as_index= False)["Amount"].sum().sort_values(by="Amount",ascending=False)

sns.barplot(data=sales_marstatus, x="Marital_Status", y="Amount", hue="Gender")

"""#### From the above barplot we can conclude that "unmarried females" have purchased more, i.e. unmarried females have more purchasing power than married females and both married and unmarried men collectively.

## State
"""

sns.set(rc={"figure.figsize":(25,5)})
state_plot =sns.countplot(data=df, x="State")

for bars in state_plot.containers:
    state_plot.bar_label(bars)

#### The below line of code gives the barplot of Orders against State.
#### set is used to resize the barplot when we cannot see the data on the barplot clearly.
#### head(10) gives us the names of the top 10 states from which maximum number of orders were being placed.


sales_state=df.groupby(["State"],as_index=False)["Orders"].sum().sort_values(by="Orders", ascending= False).head(10)

sns.set(rc={"figure.figsize":(20,5)})
sns.barplot(data=sales_state, x="State", y="Orders")

"""#### From the above barplot we can conclude that the top 3 states with maximum number of orders are "Uttar Pradesh" , "Maharashtra" and "Karnataka"."""

#### The below line of code gives the barplot of Amount against State.


sales_state=df.groupby(["State"],as_index=False)["Amount"].sum().sort_values(by="Amount", ascending= False).head(10)

sns.barplot(data=sales_state, x="State", y="Amount")

"""#### From the above barplot we can conclude that the top 3 states with maximum purchasing power are "Uttar Pradesh" , "Maharashtra" and "Karnataka".

## Occupation
"""

ocp_data= sns.countplot(data=df, x="Occupation")

for bars in ocp_data.containers:
    ocp_data.bar_label(bars)

sales_ocp = df.groupby(["Occupation"],as_index=False)["Amount"].sum().sort_values(by="Amount",ascending=False)

sns.barplot(data=sales_ocp, x="Occupation", y="Amount")

"""#### From the above barplot we can conclude that the top 3 occupations with maximum purchasing power are "IT Sector" , "Healthcare" and "Aviation", i.e. individuals working in these sectors purchase more than the rest of the working individuals.

## Product Category
"""

sns.set(rc={"figure.figsize":(25,5)})
procat_data= sns.countplot(data=df, x="Product_Category")

for bars in procat_data.containers:
    procat_data.bar_label(bars)

sales_procat=df.groupby(["Product_Category"],as_index=False)["Amount"].sum().sort_values(by="Amount", ascending=False).head(10)

sns.barplot(data=sales_procat, x="Product_Category", y="Amount")

"""#### From the above barplot we can conclude that the top 3 categories of product that have been purchased more are "Food" , "Clothing & Apparel" and "Electronics & Gadgets", i.e. individuals prefer purchasing food, clothes and electronics over all other amenities.

# Conclusion

#### After performing EDA, we conclude that:
#### Married women having age between 26-35 years, who are from the states of Uttar Pradesh, Maharashtra and Karnataka, working in IT, Healthcare and Aviation sector, are more interested in purchasing products from food, clothes and eletronics category.
"""